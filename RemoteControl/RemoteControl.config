set (autostart true)
set (preconditions Platform)

map()
    kv(repeatstart 500)
    kv(repeatinterval 100)
    kv(releasetimeout ${PLUGIN_REMOTECONTROL_RELEASE_TIMEOUT})
    kv(passon ${PLUGIN_REMOTECONTROL_PASSON})
    if (PLUGIN_REMOTECONTROL_POSTLOOKUPFILE)
        kv(postlookupfile ${PLUGIN_REMOTECONTROL_POSTLOOKUPFILE})
    endif()
end()
ans(configuration)

if (PLUGIN_REMOTECONTROL_IR)
map()
    kv(name IR)
    kv(mapfile ir-remote.json)
    kv(passon false)
if (PLUGIN_REMOTECONTROL_CODEMASK)
    key(settings)
    map()
        kv(codemask ${PLUGIN_REMOTECONTROL_CODEMASK})
    end()
else()
    key(settings)
    map()
        kv(repeatstart 500)
        kv(repeatinterval 100)
        kv(releasetimeout 30000)
    end()
endif()
end()
ans(devices)
map_append(${configuration} devices ___array___)
map_append(${configuration} devices ${devices})
endif()

if (PLUGIN_REMOTECONTROL_DEVINPUT)
map()
    kv(name DevInput)
    kv(mapfile devinput-remote.json)
    kv(passon false)
end()
ans(devices)
map_append(${configuration} devices ___array___)
map_append(${configuration} devices ${devices})
endif()

map()
    kv(name Web)
    kv(mapfile web-remote.json)
end()
ans(virtuals)

if (PLUGIN_REMOTECONTROL_CUSTOM_VIRTUAL_NAME)

map()
    kv(name ${PLUGIN_REMOTECONTROL_CUSTOM_VIRTUAL_NAME})
    kv(mapfile ${PLUGIN_REMOTECONTROL_CUSTOM_VIRTUAL_MAP_FILE})
end()
ans(custom_virtuals)

map_append(${configuration} virtuals ${custom_virtuals})
else()
map_append(${configuration} virtuals ___array___)
endif()

map_append(${configuration} virtuals ${virtuals})

if (RF4CE_FOUND)
map()
    kv(name RF4CE)
    kv(mapfile rf4ce-remote.json)
    key(settings)
    map()
        kv(remoteid ${PLUGIN_REMOTECONTROL_RFCE_REMOTE_ID})
        kv(module ${PLUGIN_REMOTECONTROL_RFCE_MODULE})
        kv(nodeid ${PLUGIN_REMOTECONTROL_RFCE_NODE_ID})
        kv(autopairing ${PLUGIN_REMOTECONTROL_RFCE_AUTOPAIRING})
    end()
end()
ans(devices)

map_append(${configuration} devices ___array___)
map_append(${configuration} devices ${devices})
endif()

if (PLUGIN_REMOTECONTROL_POSTLOOKUP_CALLSIGNS_LIST)
# Append the JSON Array for "links"
list(LENGTH PLUGIN_REMOTECONTROL_POSTLOOKUP_CALLSIGNS_LIST CALLSIGNS_LIST_LENGTH)
list(LENGTH PLUGIN_REMOTECONTROL_POSTLOOKUP_MAPFILES_LIST MAPFILES_LIST_LENGTH)
if (NOT CALLSIGNS_LIST_LENGTH EQUAL MAPFILES_LIST_LENGTH)
    message(FATAL_ERROR "The lookup callsign list and mapping files list do not match")
endif()
math(EXPR CALLSIGNS_LIST_LENGTH "${CALLSIGNS_LIST_LENGTH} - 1")

map_append(${configuration} links ___array___)
foreach(index RANGE ${CALLSIGNS_LIST_LENGTH})
    list(GET PLUGIN_REMOTECONTROL_POSTLOOKUP_CALLSIGNS_LIST ${index} CALLSIGN)
    list(GET PLUGIN_REMOTECONTROL_POSTLOOKUP_MAPFILES_LIST ${index} MAPFILE)
    map()
        kv(name ${CALLSIGN})
        kv(mapfile ${MAPFILE})
    end()
    ans(linkies)
    map_append(${configuration} links ${linkies})
endforeach()

endif()
